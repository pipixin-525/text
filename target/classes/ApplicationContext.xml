<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!--配置自动扫描的包-->
    <context:component-scan base-package="com.yx">
        <!--Spring不扫描Controller和ControllerAdvice注解-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--引入外部属性文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--配置连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${mysql.driver}"/>
        <property name="jdbcUrl" value="${mysql.url}"/>
        <property name="user" value="${mysql.user}"/>
        <property name="password" value="${mysql.password}"/>
        <property name="maxPoolSize" value="${mysql.maxSize}"/>
        <property name="initialPoolSize" value="${mysql.initSize}"/>
    </bean>
    <!--JdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--启用事务注解-->
    <tx:annotation-driven/>

    <!--配置MyBatis：将SQLSessionFactoryBean配置进IOC容器-->
    <!--所有的MyBatis全局配置文件中的配置，都可以在此处完成-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:MyBatis.xml"/>
        <!--注册sql映射文件-->
        <property name="mapperLocations" value="classpath:com/yx/dao/*.xml"/>
    </bean>

    <!--Dao代理实现类作为SpringIOC容器中的bean被IOC管理-->
    <!--<mybatis-spring:scan base-package="com.yx.dao"/>-->
    <bean id="configure"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yx.dao"/>
    </bean>

</beans>